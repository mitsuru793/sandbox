<?php
/*
===は配列の中身を再帰的に比較する
*/

// ===だと型の違いまで見る。
$a = [1, '2'];
$b = [1, 2];
assert($a == $b);
assert($a !== $b);

// keyも同じでないといけない。
$a = [
    0 => 'a',
    1 => 'b',
];
$b = [
    2 => 'a',
    3 => 'b',
];
assert($a != $b);

// keyの型までは===でも比較しない。
$a = [
    0 => 'a',
    1 => 'b',
];
$b = [
    '0' => 'a',
    '1' => 'b',
];
assert($a === $b);

// ===だとオブジェクトの型だけではなく、オブジェクトのIDまで比較。
$a = new stdClass;
$b = new stdClass;
assert($a == $b);
assert($a !== $b);

$a = $b;
assert($a === $b);

// 再帰的に値を確認している。
$a = [
    0 => [
        'age' => 1,
    ],
    1 => [
        'age' => 2,
    ],
];
$b = [
    0 => [
        'age' => '1',
    ],
    1 => [
        'age' => '2',
    ],
];
assert($a == $b);
assert($a !== $b);

$a[0]['age'] = 99;
assert($a != $b);
